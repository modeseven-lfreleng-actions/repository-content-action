---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Action test/validation workflow
name: "Test GitHub Action üß™"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  ### Test the GitHub Action in this Repository ###
  tests:
    name: "Test local GitHub Action"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 5
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Perform setup prior to running test(s)
      - name: "Checkout sample project repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: "lfreleng-actions/test-python-project"
          path: "test-python-project"

      # Test local action
      - name: "Run action: ${{ github.repository }}"
        id: testing
        uses: ./
        with:
          path_prefix: "test-python-project"
          github_summary: true

      - name: "Validate action: ${{ github.repository }}"
        shell: bash
        run: |
          # Validate Action Output
          if [ "${{ steps.testing.outputs.python_project }}" \
            != 'true' ]; then
            echo 'Error: expected to find a Python project ‚ùå'
            echo "Returned: ${{ steps.testing.outputs.python_project }}"
            echo 'Expected: true'
            errors='true'
          elif [ "${{ steps.testing.outputs.tox_config }}" \
            != 'true' ]; then
            echo 'Error: expected to find a TOX configuration ‚ùå'
            echo "Returned: ${{ steps.testing.outputs.tox_config }}"
            echo 'Expected: true'
            errors='true'
          elif [ "${{ steps.testing.outputs.jupyter_notebooks }}" \
            != 'true' ]; then
            echo 'Error: expected to find Jupyter Notebooks ‚ùå'
            echo "Returned: ${{ steps.testing.outputs.jupyter_notebooks }}"
            echo 'Expected: true'
            errors='true'
          fi
          if [ "$errors" == 'true' ]; then
            echo 'Action validation failed ‚ùå'
            exit 1
          else
            echo 'Action validation passed ‚úÖ'
          fi
